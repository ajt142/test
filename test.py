{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "6f99bd3f-32d5-415d-9c2d-fa514d300b29",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello! How can I assist you today?\n"
     ]
    }
   ],
   "source": [
    "import openai\n",
    "\n",
    "openai.api_key = \"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\"\n",
    "\n",
    "response = openai.ChatCompletion.create(\n",
    "    model=\"gpt-4o-mini\",\n",
    "    messages=[\n",
    "        {\"role\": \"system\", \"content\": \"You are a helpful assistant.\"},\n",
    "        {\"role\": \"user\", \"content\": \"Hello!\"}\n",
    "    ]\n",
    ")\n",
    "\n",
    "# Extract and print only the assistant's message content\n",
    "print(response['choices'][0]['message']['content'])\n",
    "\n",
    "\n",
    "response = openai.ChatCompletion.create(\n",
    "  model=\"gpt-4o-mini\",\n",
    "  messages=[\n",
    "    {\n",
    "      \"role\": \"system\",\n",
    "      \"content\": [\n",
    "        {\n",
    "          \"type\": \"text\",\n",
    "          \"text\": \"You are a helpful assistant that is very intelligent and can analyze and interpret data concisely \"\n",
    "        }\n",
    "      ]\n",
    "    }\n",
    "  ],\n",
    "  temperature=1,\n",
    "  max_tokens=2048,\n",
    "  top_p=1,\n",
    "  frequency_penalty=0,\n",
    "  presence_penalty=0,\n",
    "  tools=[\n",
    "    {\n",
    "      \"type\": \"function\",\n",
    "      \"function\": {\n",
    "        \"name\": \"analyze_documents\",\n",
    "        \"description\": \"This function will analyze and interpret data from .pdf files, texts, and word documents, and be able to answer any questions about the data\",\n",
    "        \"parameters\": {\n",
    "          \"type\": \"object\",\n",
    "          \"required\": [\n",
    "            \"documents\",\n",
    "            \"question\"\n",
    "          ],\n",
    "          \"properties\": {\n",
    "            \"documents\": {\n",
    "              \"type\": \"array\",\n",
    "              \"description\": \"Array of documents to be analyzed\",\n",
    "              \"items\": {\n",
    "                \"type\": \"object\",\n",
    "                \"properties\": {\n",
    "                  \"file_type\": {\n",
    "                    \"type\": \"string\",\n",
    "                    \"description\": \"Type of the document (e.g. pdf, text, word)\"\n",
    "                  },\n",
    "                  \"content\": {\n",
    "                    \"type\": \"string\",\n",
    "                    \"description\": \"Content of the document\"\n",
    "                  }\n",
    "                },\n",
    "                \"required\": [\n",
    "                  \"file_type\",\n",
    "                  \"content\"\n",
    "                ],\n",
    "                \"additionalProperties\": False\n",
    "              }\n",
    "            },\n",
    "            \"question\": {\n",
    "              \"type\": \"string\",\n",
    "              \"description\": \"Question to be answered based on the analyzed content\"\n",
    "            }\n",
    "          },\n",
    "          \"additionalProperties\": False\n",
    "        },\n",
    "        \"strict\": True\n",
    "      }\n",
    "    }\n",
    "  ],\n",
    "  parallel_tool_calls=True,\n",
    "  response_format={\n",
    "    \"type\": \"text\"\n",
    "  }\n",
    ")\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
